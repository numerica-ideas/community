variables:
  BACKEND_IMAGE_NAME: lugar2020/spring-backend
  FRONTEND_IMAGE_NAME: lugar2020/angular-frontend

stages:
  - build_push_image
  - deploy

build_spring_image:
  stage: build_push_image
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
    - cd spring-boot-h2-database-crud/
  script: 
    - docker build -t $BACKEND_IMAGE_NAME .
    - docker push $BACKEND_IMAGE_NAME

build_angular_image:
  stage: build_push_image
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - echo $DOCKER_PASSWORD | docker login -u $DOCKER_LOGIN --password-stdin
    - cd angular-14-crud-example/
  script: 
    - docker build -t $FRONTEND_IMAGE_NAME .
    - docker push $FRONTEND_IMAGE_NAME

deploy_application:
  stage: deploy
  image: devth/helm:latest
  before_script:
    - cd helm/
    - kubectl config get-contexts
    - kubectl config use-context kemanedonfack/microservice-app-deployment:k8s-cluster
  script: 
    - helm install --set-string BACKEND_PUBLIC_ACCESS=$BACKEND_PUBLIC_ACCESS frontend angular-frontend
    - helm install backend spring-backend
  
